name: sf_deployment

on:
  push:
    branches:
      - main
    paths:
      - '**.ddl'

jobs:
  ddl_deploy:
    runs-on: ubuntu-18.04

    steps:
      - name: Copy files
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Check copied files
        run: ls -la
      
      - name: Install Alien
        run: sudo apt-get install alien
        
      - name: Install rpm file
        run: curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowflake-snowsql-1.2.21-1.x86_64.rpm
      
      - name: Convert rpm to deb    
        run: sudo alien --to-deb snowflake-snowsql-1.2.21-1.x86_64.rpm
     
      - name: Check files
        run: ls -la
     
      - name: Install SnowSQL
        run: sudo dpkg -i snowflake-snowsql_1.2.21-2_amd64.deb
      
      - name: Check files and SnowSQL version
        run: |
          pwd
          ls -la
          snowsql -v
      - name: Get list of changed or new files
        run: |
          list_of_files=
          touch changed_and_new_files.txt
          latest_release_branch=$(git branch | grep release | tail -1)
          latest_release_branch=${latest_release_branch##*'* '}
          previouse_release_branch=$(git branch | grep release | tail -2 | head -n 1)
          previouse_release_branch=${previouse_release_branch##*'* '}
          
          if [[ $latest_release_branch == $previouse_release_branch ]]
          then
            search_dir=/home/runner/work/git_actions_test/git_actions_test/DDLs
            for entry in "$search_dir"/*
            do
              list_of_files="$list_of_files -f $entry"
            done
          else
            git diff --name-only $latest_release_branch..$previouse_release_branch >> changed_and_new_files.txt 
            file="changed_and_new_files.txt"
            changed_and_new_files=$(cat $file)
            for line in $changed_and_new_files
            do
              if [[ $line == *".ddl"* ]]; 
              then
                list_of_files="$list_of_files -f ${line##*/}"
              fi
            done
          fi
          
      - name: RUN SnowSQL to create tables
        env:
           SNOWSQL_PWD: ${{ secrets.SECRET_PWD }}
        run: snowsql $list_of_files -a vw86460.east-us-2.azure -u alijkee -d STRIIM -s PUBLIC -r ACCOUNTADMIN -w COMPUTE_WH -D password=${{ env.SNOWSQL_PWD }}

          
          
          
          
          
          
          
        
